SSH ACCESES
apt-get install ssh
nano /etc/ssh/sshd_config
PermitRootLogin yes


MAKING NEW USER SUDO deploy
adduser deploy
adduser deploy sudo
su deploy  o ssh deploy@192.168.1.xx


INSTALLING RUBY WITH RBENV user deploy
sudo apt-get install curl
curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo add-apt-repository ppa:chris-lea/redis-server
sudo apt-get update
sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev dirmngr gnupg apt-transport-https ca-certificates redis-server redis-tools nodejs yarn

git clone https://github.com/rbenv/rbenv.git ~/.rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
git clone https://github.com/rbenv/rbenv-vars.git ~/.rbenv/plugins/rbenv-vars
exec $SHELL
rbenv install 2.6.5
rbenv global 2.6.5
ruby -v



INSTALLING BUNDLER user deploy
gem install bundler
bundle -v
If it tells you bundle not found, run rbenv rehash and try again.


Installing NGINX & Passenger  user deploy
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
sudo sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main > /etc/apt/sources.list.d/passenger.list'
sudo apt-get update
sudo apt-get install -y nginx-extras libnginx-mod-http-passenger
if [ ! -f /etc/nginx/modules-enabled/50-mod-http-passenger.conf ]; then sudo ln -s /usr/share/nginx/modules-available/mod-http-passenger.load /etc/nginx/modules-enabled/50-mod-http-passenger.conf ; fi
sudo ls /etc/nginx/conf.d/mod-http-passenger.conf

sudo nano /etc/nginx/conf.d/mod-http-passenger.conf
passenger_ruby /home/deploy/.rbenv/shims/ruby;
sudo service nginx start
sudo rm /etc/nginx/sites-enabled/default
sudo nano /etc/nginx/sites-enabled/myapp
> /etc/nginx/sites-enabled/config-rails
server {
listen 80;
listen [::]:80;
server_name _;
root /home/deploy/myapp/public;
passenger_enabled on;
passenger_app_env production;
location /cable {
passenger_app_group_name myapp_websocket;
passenger_force_max_concurrent_requests_per_process 0;
}
# Allow uploads up to 100MB in size
client_max_body_size 100m;
location ~ ^/(assets|packs) {
expires max;
gzip_static on;
}
}

sudo service nginx reload


Creating a MySQL Database  deploy user
sudo apt-get install mysql-server mysql-client libmysqlclient-dev
sudo mysql_secure_installation
sudo mysql  -u railuser-p
type passs here

CREATE DATABASE IF NOT EXISTS myapp;
GRANT ALL PRIVILEGES ON rails_mysql_crud.* TO 'railsuser'@'localhost';				
GRANT ALL PRIVILEGES ON rails_mysql_crud_development.* TO 'railsuser'@'localhost';				
GRANT ALL ON BD.* TO railsuser@localhost IDENTIFIED BY "railspas";				
FLUSH PRIVILEGES;

show databases;
select User from mysql.user;
SHOW GRANTS FOR railuser@localhost;
use [db name];
show tables;
drop database dbname;


INSTALL RAILS AND MAKE MYAPP
gem install rails
rails -v
rails new myapprails -b mysql
cd myapp
rails server
http://localhost:3000

TUNING MYAPP RAILS
rails generate controller Welcome index
nano /home/deploy/myapp/app/views/welcome/index.html.erb
nano /home/deploy/myapp/config/routes.rb
"Rails.application.routes.draw do
  get 'welcome/index'
 
  root 'welcome#index'
end"
killall ruby -9
touch tmp/restart.txt
rails server -d
PROXY PASS NGINX 

server {
listen 80 default_server;
listen [::]:80 default_server ipv6only=on;
root /home/deploy/myapp/public;
index index.html index.htm;
server_name localhost;
location / {
proxy_pass http://127.0.0.1:3000/;
proxy_set_header        Host              $http_host;
}
location /cable {
proxy_pass http://127.0.0.1:3000/cable;
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "upgrade";
}
}


ERROR DNS ADD
To allow requests to server.org, add the following to your environment configuration:
config/enviroments/development.rb
config.hosts << "server.org"

rails restart
rails s                   start
rails s -d                daemon
killall ruby -9           kill
